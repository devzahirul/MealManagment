// Generated by Dagger (https://dagger.dev).
package com.ugo.mhews.mealmanage.data.auth;

import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineDispatcher;

@ScopeMetadata
@QualifierMetadata("com.ugo.mhews.mealmanage.core.di.IoDispatcher")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class AuthRepositoryImpl_Factory implements Factory<AuthRepositoryImpl> {
  private final Provider<FirebaseAuth> authProvider;

  private final Provider<CoroutineDispatcher> ioDispatcherProvider;

  public AuthRepositoryImpl_Factory(Provider<FirebaseAuth> authProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    this.authProvider = authProvider;
    this.ioDispatcherProvider = ioDispatcherProvider;
  }

  @Override
  public AuthRepositoryImpl get() {
    return newInstance(authProvider.get(), ioDispatcherProvider.get());
  }

  public static AuthRepositoryImpl_Factory create(Provider<FirebaseAuth> authProvider,
      Provider<CoroutineDispatcher> ioDispatcherProvider) {
    return new AuthRepositoryImpl_Factory(authProvider, ioDispatcherProvider);
  }

  public static AuthRepositoryImpl newInstance(FirebaseAuth auth,
      CoroutineDispatcher ioDispatcher) {
    return new AuthRepositoryImpl(auth, ioDispatcher);
  }
}
